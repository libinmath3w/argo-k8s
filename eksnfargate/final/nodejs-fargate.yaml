# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: nodejs-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nodejs-demo
  name: deployment-nodejs
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-nodejs
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-nodejs
    spec:
      containers:
      - image: "ghcr.io/benc-uk/nodejs-demoapp:latest"
        imagePullPolicy: Always
        name: app-nodejs
        resources:
          limits:
            memory: "512Mi"
            cpu: "1024m"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: nodejs-demo
  name: service-nodejs
spec:
  ports:
    - protocol: TCP
      targetPort: 3000
      port: 80
      nodePort: 30001
  type: NodePort
  selector:
    app.kubernetes.io/name: app-nodejs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nodejs-demo
  name: ingress-nodejs
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:ap-south-1:918252278260:certificate/da72563e-b60f-4bce-8074-3fd1c50ee505'

spec:
  ingressClassName: alb          
  rules:
  - host: k8sapp.intrastream.cyou
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-nodejs
            port:
              number: 80
